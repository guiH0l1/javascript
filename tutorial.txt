usuário: t-334031
senha: G1JTXfK8

usuário: t-354645
senha: uX34UgPh

# Lógica de programação

# Photshop

# front-end
- HTML5 e CSS3
- UX UI
- JavaScript
- Frameworks (bootstrap)
- CMS (wordpress)

# banco de dados

# sistemas desktop
electron

# back-end (Java ou php)

# testes

# pi
___________________________________
Lógica de programação
- variáveis
- operadores
- algorítmo
- estruturas de controle
- POO
- estruturas de dados


______________________________________________________

MANDAMENTOS DA PROGRAMAÇÃO:

1) UX (User eXperience) Desenvolver sempre pensando na experiencia de usuario

2) Usar o mínimo possivel de código (variaveis, operadores, compadoradores estruturas de controle etc)
para resolver o problema (lembrar o marca passo)

3) Entender o problema, não adianta sentar na frente se voce não sabe como resolver o problema.
Algoritmo ("receita de bolo")
conceito:
- Variaveis - Entrada - Processamento - Saída

GIT e GITHUB

Comandos básicos do git:
git config --global user.name "Seu nome"
git config --global user.email "seuemail@email.com"
git clone url_do_repositório (clonar repositorio)
git add . (adiciona ao repositorio local)
git commit -m "tutorial" (documentar as alterações)
git push (enviar ao repositorio do github)
git status (verificar o status do repositorio local)
git pull (sincroniza as informações do repositorio) 


Gerar token GitHub
1) Settings
2) Developer Settings
3) Token classic
4) Gerar o token selecionando tudo, guardar o token

____________________________________________________

Arduino IDE

Boas práticas na programação 
1) Cabeçalho do documentação
/**
 Nome do projeto ou a descrição da classe e função
 @author Guilherme Holi
 @version 1.0
*/
2) Nomes de arquivos variaveis, funções, classe e etc.
Regras(clear Code)
declarar nomes que tem relação com ele, não usar espaço, "Ç", acentos 
e outros caracteres especiais para declaração de nomes. só classes funcionam com letras maiuscula
não iniciar um nome com numero. Quando for declarar 2 nomes usar a tecnica do camelo(camelCase)
exemplo: nomeCliente
______________________________________________________

Node:
É uma plataforma que executa o java script fora do navegador

comando básicos:
node -v (mostra a versão) OBS; sempre usar a versão LTS

Gerenciador de pacotes para o Node
npm está relacionado a pasta de projeto ou seja o pacote está instalado na raiz do projeto e não no sistema

npm -v(versão node)
npm ls(listar pacotes instalados)
npm init (iniciar um novo projeto em java script)
    cria um arquivo chamdo package.json(JavaScript Object Notation)

npm i node_do_pacote (instalar um nove pacote)
npm r nome_do_pacote (remover um pacote)


Comandos básicos do MS-DOS 
cls --> limpar a tela
dir --> listar arquivos e repositorios
cd nome_depositorio --> entrar no diretorio
cd .. -> voltar ao diretorio anterior


______________________________________________________

Uma constante é como uma variável, mas com uma diferença importante: uma vez que você define o valor de uma constante, 
ele não pode ser alterado durante a execução do programa.

Por que usar constantes?
Segurança: Se você sabe que um valor não deve ser alterado em seu programa, usar uma constante evita erros.
Legibilidade: Quando você usa uma constante, deixa claro para quem está lendo o código que aquele valor é fixo e importante.
Boas práticas: Em muitos casos, é recomendado usar constantes sempre que possível para valores que não precisam mudar, facilitando a manutenção do código.

Uma variável é um espaço na memória do computador onde armazenamos dados que podem ser utilizados e modificados durante a execução de um programa. O nome "variável" vem do fato de que o valor armazenado pode variar ao longo do tempo, conforme o programa roda.

Por que usar variáveis?
Para guardar informações que você vai precisar mais tarde.
Para realizar cálculos ou tomar decisões baseadas em diferentes valores.

as variaveis são tipadas ou dinamicamente típadas. 

existem 3 tipos de variaveis o numero(numeros inteiros e não inteiros), string(texto e caracteres, e numeros) 
e boolean(lógico)

ATENÇÃO: No javaScript uma variavel pode ser criada usando let ou var 
var ficou obsoleto e inseguro de preferencia use o let.

_________________________________________________________

Comandos em JavaScript: (Sintaxe)

console.log() --> Escrever no console
console.clear() --> Limpar a tela do console
const --> criar/declarar uma constante
let --> Criar ou declarar uma variavel
typeof() --> verificar o tipo da variavel

_________________________________________________________
Estruturas de controle
- condicionais
- laço de repetições

Estruturas de controle condicionais

if (condição) {
    //condição verdadeira
}


if (condição){
 //condição verdadeira
} else if (condição2){
    //condição 2 verdadeira
} else {
 //condição falsa
}

OBS: Nesta estrutura o else é opcional, porem se indicado caso 
não nenhuma condição 

Observações:
1) Uma condição nunca pode ser verdadeira e falsa simultaneamente
2) No uso do if e else sempre uma das condições será processada.

switch case (uso de variavel numerica(numerica inteira))

switch (variavel){
    case 1: 
        //codigo caso o valor da variavel seja 1
        break
    case 2:
        //codigo caso o valor da variavel seja 2
        break
    default:
        //opcional, o codigo sera executado se nenhum caso for definido
        break
}


Estruture de controle - laços de controle
for (let i = 1; i < 10; i++){
    // o codigo aqui será repetido enquanto a condição for verdadeira
}

// laço com numerosde repetições definidos
// let i = 1 (inicio)
// i < 10 (condição)
// i++ (incremento) i-- (decremento)

Uso do laço for
1) Percorrer uma estrutura de dados (Importante)
2) Simplificar o codigo
3) Fazer calculos levando em conta a variavel interna do laço 

while(condição){
    //condição verdadeira
}

do {
    //condição verdadeira
} while(condição)

As estruturas while e dp while são estruturas de repetições infinitas, ou seja enquanto a condição for verdadeira
o codigo interno sera repetido infinitamente.

____________________________________________________

Executando javaScript junto com o HTML5 
-execução interna no proprio documento HTML
-link com um documento js (preferencialmente)

____________________________________________________
POO (Programação Orientada a Objetos)

Objeto -> 

Conceito relacionado a estruturas de dados:
CRUD (Create Read Update Delete)
São 4 operações básicas que podemos realizar com a estrutura de dados:
Create: Inserção de dados na estrutura
Raad: Pesquisa e leitura de dados na estrutura
Update: Alteração de dados na estrutura
Delete: Exclusão de dados

Pilares da programação orientada a objetos
// reutilização
Abstração
Herança
Polimorfismo

// segurança
Encapsulamento

OBS:
Toda classe modelo obrigatoriamente deve iniciar com letra maiuscula

Dica:

classe (Biologia Ex: Mamíferos)

Lingua Portuguesa:
Objeto (substantivo)
Atributo (adjetivo)
Metodos (verbos)


-----------------------------------------------------------------------------------------------------------------------------------------
CURSO DE CIENCIA DE DADOS:
https://www.netacad.com/courses/introduction-data-science?courseLang=pt-BR&instance_id=584efdbd-0f20-4b44-bf84-00807632d754

